{"ast":null,"code":"// URL da sua API backend\nconst BASE_URL = 'http://localhost:8000';\n\n// Função para listar produtos\nexport const listarProdutos = async () => {\n  try {\n    const response = await fetch(`${BASE_URL}/produtos`);\n    if (!response.ok) throw new Error('Erro ao buscar produtos');\n    return await response.json();\n  } catch (error) {\n    console.error('Erro ao listar produtos:', error);\n    throw error;\n  }\n};\n\n// Função para criar produto\nexport const criarProduto = async produto => {\n  try {\n    const response = await fetch(`${BASE_URL}/produtos`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(produto)\n    });\n    if (!response.ok) throw new Error('Erro ao criar produto');\n    return await response.json();\n  } catch (error) {\n    console.error('Erro ao criar produto:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["BASE_URL","listarProdutos","response","fetch","ok","Error","json","error","console","criarProduto","produto","method","headers","body","JSON","stringify"],"sources":["C:/Users/mbia/OneDrive/Área de Trabalho/5o semestre/projeto de cloud/campustrade-25.08/frontend/src/api.js"],"sourcesContent":["// URL da sua API backend\r\nconst BASE_URL = 'http://localhost:8000';\r\n\r\n// Função para listar produtos\r\nexport const listarProdutos = async () => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/produtos`);\r\n    if (!response.ok) throw new Error('Erro ao buscar produtos');\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Erro ao listar produtos:', error);\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Função para criar produto\r\nexport const criarProduto = async (produto) => {\r\n  try {\r\n    const response = await fetch(`${BASE_URL}/produtos`, {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(produto)\r\n    });\r\n    \r\n    if (!response.ok) throw new Error('Erro ao criar produto');\r\n    return await response.json();\r\n  } catch (error) {\r\n    console.error('Erro ao criar produto:', error);\r\n    throw error;\r\n  }\r\n};"],"mappings":"AAAA;AACA,MAAMA,QAAQ,GAAG,uBAAuB;;AAExC;AACA,OAAO,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EACxC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,WAAW,CAAC;IACpD,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;IAC5D,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,YAAY,GAAG,MAAOC,OAAO,IAAK;EAC7C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGH,QAAQ,WAAW,EAAE;MACnDW,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,OAAO;IAC9B,CAAC,CAAC;IAEF,IAAI,CAACR,QAAQ,CAACE,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;IAC1D,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}